{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(true);useEffect(()=>{// Check for saved theme preference or default to dark mode\nconst savedTheme=localStorage.getItem('theme');if(savedTheme){setIsDarkMode(savedTheme==='dark');}},[]);useEffect(()=>{// Apply theme to document root\ndocument.documentElement.setAttribute('data-theme',isDarkMode?'dark':'light');localStorage.setItem('theme',isDarkMode?'dark':'light');},[isDarkMode]);const toggleTheme=()=>{setIsDarkMode(prev=>!prev);};const value={isDarkMode,toggleTheme};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","useTheme","context","Error","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","toggleTheme","prev","value","Provider"],"sources":["C:/Users/manth/OneDrive/Desktop/Mantex.me/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  useEffect(() => {\n    // Check for saved theme preference or default to dark mode\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    }\n  }, []);\n\n  useEffect(() => {\n    // Apply theme to document root\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const value = {\n    isDarkMode,\n    toggleTheme\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAElDC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAY,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAIF,UAAU,CAAE,CACdD,aAAa,CAACC,UAAU,GAAK,MAAM,CAAC,CACtC,CACF,CAAC,CAAE,EAAE,CAAC,CAENZ,SAAS,CAAC,IAAM,CACd;AACAe,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEP,UAAU,CAAG,MAAM,CAAG,OAAO,CAAC,CAClFG,YAAY,CAACK,OAAO,CAAC,OAAO,CAAER,UAAU,CAAG,MAAM,CAAG,OAAO,CAAC,CAC9D,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBR,aAAa,CAACS,IAAI,EAAI,CAACA,IAAI,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZX,UAAU,CACVS,WACF,CAAC,CAED,mBACEjB,IAAA,CAACC,YAAY,CAACmB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAZ,QAAA,CACjCA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}